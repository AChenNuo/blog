<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.BlogDao">
    <resultMap id="BlogResult" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="releaseDate" column="releaseDate"/>
        <result property="clickHit" column="clickHit"/>
        <result property="replyHit" column="replyHit"/>
        <result property="content" column="content"/>
        <result property="keyWord" column="keyWord"/>
        <!--
        封装方式三-支持分布查询-如果有的查询太复杂了，推荐使用分布查询
        首先获取到数据库中typeId的值，然后将该值作为参数传给方法findById，该方法的返回值则为blogType-->
        <association property="blogType" column="typeId" select="com.blog.dao.BlogTypeDao.findById"/>
    </resultMap>

    <!--这里group写的不一样-->
    <select id="countList" parameterType="string" resultMap="BlogResult">
        select DATE_FORMAT(releaseDate,'%Y年%m月') as releaseDateStr,count(*) as blogCount
        FROM t_blog group by releaseDateStr
        order by releaseDateStr desc
    </select>

    <select id="list" parameterType="map" resultMap="BlogResult">
        select * from t_blog
        <where>
            <if test="title != null and title != ''">
                and title like #{title}
            </if>
            <if test="typeId != null and typeId != 0">
                and typeId = #{typeId}
            </if>
            <if test="releaseDateStr != null and releaseDateStr != ''">
                and DATE_FORMAT(releaseDate,'%Y年%m月') = #{releaseDateStr}
            </if>
        </where>
        order by releaseDate desc
        <if test="start != null and size != null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getTotal" parameterType="map" resultType="long">
        select count(*) from t_blog
        <where>
            <if test="title != null and title != ''">
                and title like #{title}
            </if>
            <if test="typeId != null and typeId != 0">
                and typeId = #{typeId}
            </if>
            <if test="releaseDateStr != null and releaseDateStr != ''">
                and DATE_FORMAT(releaseDate,'%Y年%m月') = #{releaseDateStr}
            </if>
        </where>
    </select>

    <select id="findById" parameterType="integer" resultMap="BlogResult">
        select * from t_blog where id = #{id}
    </select>

    <!--useGeneratedKeys=true 使用数据库的规则..keyProperty="id"主键使用id-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="Blog" >
      insert into t_blog values(null,#{title},#{summary},now(),0,0,#{content},#{blogType.id},#{keyWord})
    </insert>

    <update id="update" parameterType="Blog">
        update t_blog
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="summary != null and summary != ''">
                summary = #{summary},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="blogType.id != null and blogType.id != 0">
                typeId = #{blogType.id},
            </if>
            <if test="keyWord != null and keyWord != ''">
                keyWord = #{keyWord},
            </if>
            <if test="clickHit != null">
                clickHit = #{clickHit},
            </if>
            <if test="replyHit != null">
                replyHit = #{replyHit},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="integer">
        delete from t_blog where id = #{id}
    </delete>

    <select id="getBlogByTypeId" parameterType="integer" resultType="integer">
        select count(*) from t_blog where t_blog.typeId = #{typeId}
    </select>

    <select id="getLastBlog" parameterType="integer" resultMap="BlogResult">
        select * from t_blog where id&lt;#{id} order by id desc limit 1
    </select>

    <select id="getNextBlog" parameterType="integer" resultMap="BlogResult">
        select * from t_blog where id&gt;#{id} order by id asc limit 1
    </select>

    <update id="updateToReplyHit" parameterType="integer">
        update t_blog set replyHit = #{replyHit} where id = #{id}
    </update>
</mapper>























