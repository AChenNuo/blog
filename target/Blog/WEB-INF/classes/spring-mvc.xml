<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
>
    <!--spring就可以知道我们启用了注解驱动，使得访问路径与方法的匹配可以通过注解配置，可以扫描service，controller等注解
    spring可以通过scan标签，去帮我们扫描service等注解，所以说我们那些所有的scan标签都可以用了-->
    <mvc:annotation-driven/>
    <!--spring的applicationContext.xml负责了service包下的注解扫描，这里写一个负责controller包下的注解扫描-->
    <!--使用注解的包，包括子集-->
    <context:component-scan base-package="com.blog.controller"/>


    <!-- 定义无Controller的path<->view直接映射,这里还不需要的 -->
    <!--<mvc:view-controller path="/" view-name="redirect:index" />-->


    <!--配置静态资源的处理
    这句话开始起作用，起含义是对于/static/**这种请求，不会被DispatcherServlet拦截，浏览器可以直接访问，当做静态资源交给Servlet处理。-->
    <!--mapping代表的是访问路径请求，location代表的是所在项目的目录位置，该目录下的文件作为静态资源，不会被dispatchServlet拦截-->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!--视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="1000000000000000"/>
    </bean>



</beans>